Q17) Random password generator develop the script that generates a random password of a specified length containing letters, numbers, and special 
characters and display it
 
#include <MsgBoxConstants.au3>
#include <Array.au3>
 
Func GeneratePassword($length)
    ; Define character pools
    Local $letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"
    Local $numbers = "0123456789"
    Local $specials = "!@#$%^&*()-_=+[]{};:'"",.<>?/|`~"
    Local $allCharacters = $letters & $numbers & $specials
 
    ; Initialize password string
    Local $password = ""
 
    ; Ensure the password includes at least one character from each group
    $password &= StringMid($letters, Random(1, StringLen($letters), 1), 1)
    $password &= StringMid($numbers, Random(1, StringLen($numbers), 1), 1)
    $password &= StringMid($specials, Random(1, StringLen($specials), 1), 1)
 
    ; Generate the rest of the password randomly from all characters
    For $i = 1 To $length - 3
        $password &= StringMid($allCharacters, Random(1, StringLen($allCharacters), 1), 1)
    Next
 
    ; Shuffle the password to randomize the order
    Local $passwordArray = StringSplit($password, "", 2)
    _ArrayShuffle($passwordArray)
    $password = _ArrayToString($passwordArray, "")
 
    Return $password
EndFunc
 
; Prompt user for password length
Local $length = InputBox("Random Password Generator", "Enter the desired password length:", "12", "", -1, -1, 0, 0)
If @error Then Exit ; Exit if user cancels
 
; Validate input
If Not StringIsInt($length) Or $length < 4 Then
    MsgBox($MB_ICONERROR, "Error", "Password length must be a number and at least 4.")
    Exit
EndIf
 
; Generate and display the password
Local $password = GeneratePassword(Int($length))
MsgBox($MB_ICONINFORMATION, "Generated Password", "Your random password is: " & @CRLF & $password)